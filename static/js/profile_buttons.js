// Generated by CoffeeScript 1.6.3
(function() {
  var pluralPersonWord, wordToGenitiveCase;

  if (typeof String.prototype.endsWith !== "function") {
    String.prototype.endsWith = function(suffix) {
      return this.indexOf(suffix, this.length - suffix.length) !== -1;
    };
  }

  wordToGenitiveCase = function(word) {
    return "" + word + "\'" + (!word.endsWith('s') ? 's' : void 0);
  };

  pluralPersonWord = function(count) {
    if (count === 1) {
      return "person";
    } else {
      return "people";
    }
  };

  $(document).ready(function() {
    var $aboutButton, $aboutMore, $followButton, $viewFollowedButton, $viewFollowersButton, aboutSlideTime, aboutSliding, aboutVisible, clickedFollowButton, setAboutMoreVisible, updateFollowerCountLabel, viewFollowersFollowedButtonClicked;
    $aboutButton = $("#profile-about-more-button");
    $aboutMore = $("#profile-about-more");
    updateFollowerCountLabel = function() {
      $.ajax({
        type: "get",
        url: "/social/api/get-follower-count/" + viewingUsername + "/"
      }).done(function(data) {
        var followerCount;
        followerCount = parseInt(data);
        return $aboutMore.find("#profile-about-follower-count").text("Followers: " + followerCount + " " + (pluralPersonWord(followerCount)));
      });
      return $.ajax({
        type: "get",
        url: "/social/api/get-followed-count/" + viewingUsername + "/"
      }).done(function(data) {
        var followedCount;
        followedCount = parseInt(data);
        return $aboutMore.find("#profile-about-followed-count").text("Follows: " + followedCount + " " + (pluralPersonWord(followedCount)));
      });
    };
    aboutSlideTime = 150;
    aboutVisible = false;
    aboutSliding = false;
    setAboutMoreVisible = function(visible, instant) {
      var time;
      if (instant == null) {
        instant = false;
      }
      if (aboutSliding) {
        return;
      }
      if (visible) {
        updateFollowerCountLabel();
      }
      aboutVisible = visible;
      aboutSliding = true;
      time = instant ? 0 : aboutSlideTime;
      if (aboutVisible) {
        $aboutMore.slideDown(time, function() {
          return aboutSliding = false;
        });
        return $aboutButton.text("Close");
      } else {
        $aboutMore.slideUp(time, function() {
          return aboutSliding = false;
        });
        return $aboutButton.text("About");
      }
    };
    $aboutButton.click(function() {
      return setAboutMoreVisible(!aboutVisible);
    });
    setAboutMoreVisible(false, true);
    $followButton = $("#profile-follow-button");
    clickedFollowButton = false;
    $followButton.click(function() {
      if (clickedFollowButton) {
        return;
      }
      clickedFollowButton = true;
      return $.ajax({
        type: "POST",
        url: "/social/follow/",
        data: {
          followUser: viewingUsername
        }
      }).done(function(data) {
        if (data.toLowerCase() === "true") {
          $followButton.addClass("profile-follow-button-followed");
          $followButton.text("Followed!");
        } else {
          $followButton.removeClass("profile-follow-button-followed");
          $followButton.text("Follow");
        }
        updateFollowerCountLabel();
        return clickedFollowButton = false;
      });
    });
    viewFollowersFollowedButtonClicked = function(title, url) {
      var $dialogueContent;
      $dialogueContent = createDialogue({
        title: title
      });
      if (!$dialogueContent) {
        return;
      }
      return $.getJSON(url, function(data) {
        var user, _i, _len, _ref, _results;
        _ref = data.users;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          user = _ref[_i];
          $dialogueContent.append(user.fullName);
          _results.push($dialogueContent.append("<br>"));
        }
        return _results;
      });
    };
    $viewFollowersButton = $("#profile-view-followers-button");
    $viewFollowersButton.click(function() {
      return viewFollowersFollowedButtonClicked("" + (wordToGenitiveCase(viewingFirstName)) + " Followers", "/social/api/get-followers/" + viewingUsername);
    });
    $viewFollowedButton = $("#profile-view-followed-button");
    return $viewFollowedButton.click(function() {
      return viewFollowersFollowedButtonClicked("Who " + (viewingSelf ? 'you' : viewingFirstName) + " follow" + (!viewingSelf ? 's' : ''), "/social/api/get-users-followed-by/" + viewingUsername);
    });
  });

}).call(this);
